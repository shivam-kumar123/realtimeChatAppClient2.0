import React, { useState, useEffect } from 'react';
import { ToastContainer} from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import io from "socket.io-client";
import { FaCopy } from 'react-icons/fa';

import Chat from './Chat'
import ToastError from './ToastError'
import ToastSuccess from './ToastSuccess'
import './Login.css';

// const socket = io.connect("https://chatapp2-0.onrender.com");
const socket = io.connect("http://localhost:3001");

function Login() {
    const [name, SetName] = useState(''); // Username 
    const [hash, SetHash] = useState(''); // Room id used in socket.io
    const [showCopy, SetShowCopy] = useState(false) // showing copy button 
    const [showChat, SetShowChat] = useState(false) // showing chats
    const [isAdmin, setIsAdmin] = useState(false); // Track admin status
    const [roomLimit, SetRoomLimit] = useState('0')
    const [showUsernameError, SetShowUsernameError] = useState(false);
    const [showHashError, SetShowHashError] = useState(false);
    const [showRoomLimitError, SetShowRoomLimitError] = useState(false);
    const [showCopyHashSuccess, SetShowCopyHashSuccess] = useState(false);

    useEffect(() => {
        SetShowHashError(false)
    }, [showHashError])

    useEffect(() => {
        SetShowUsernameError(false)
    }, [showUsernameError])

    useEffect(() => {
        SetShowRoomLimitError(false)
    }, [showRoomLimitError])

    useEffect(() => {
        SetShowCopyHashSuccess(false)
    }, [showCopyHashSuccess])

    // helps to join the room using socket.io by emitting our unique hash
    const joinRoom = (e) => {
        e.preventDefault()
        SetShowUsernameError(false);
        SetShowHashError(false);
        SetShowRoomLimitError(false);
        SetShowCopyHashSuccess(false)
        const limit = parseInt(roomLimit);
        if (name === "") {
            SetShowUsernameError(true);
        } if (hash === "") {
            SetShowHashError(true);
        } if (isAdmin && (limit < 2 || limit > 100)) {
            SetShowRoomLimitError(true);
        } if(isAdmin && (name !== "" && hash !== "" && limit >= 2 && limit <= 100)) {
            socket.emit("join_room_admin", hash, name, limit);
            SetShowChat(true);
        } else if((name !== "" && hash !== "")){
            socket.emit("join_room_user", hash, name);
            SetShowChat(true);
        }
      };


      const handleRoomLimitChange = (e) => {
        const inputValue = parseInt(e.target.value);
        if (inputValue >= 2 && inputValue <= 100) {
            SetRoomLimit(inputValue);
        } else {
            SetRoomLimit('-1');
            SetShowRoomLimitError(true);
            <ToastError message="Please enter a number between 2 and 100" />
            console.log("Please enter a number between 2 and 100.");
        }
    };

    // creates hash and sets it 
    const handleHash = (e) => {
        e.preventDefault();
        const str = require('randomstring').generate({
            length: 100,
            charset: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`~!@#$%^&*()-=_+{}[]:;",<.>?/|',
        });
        SetHash(str);
        SetShowCopy(true) 
        setIsAdmin(true); // Set admin status
        SetShowCopyHashSuccess(true)
    };

    // helps in copying the hash value generated by the system
    const copyHash = (e) => {
        e.preventDefault()
        const copyText = document.getElementById('hash-input');
        copyText.select();
        document.execCommand('copy');
    };

    return (
            <div>
                {console.log(`return of login called`)}
                <ToastContainer />
                {showUsernameError && (
                <ToastError 
                    message="Please enter a Username" 
                    />
                )}
                {showHashError && (
                    <ToastError 
                        message="Please Generate a Hash" 
                        />
                )}
                {showRoomLimitError && (
                    <ToastError 
                        message="Please enter a number between 2 and 100" 
                        />
                )}
                {showCopyHashSuccess && (
                    <ToastSuccess
                        message="make sure to copy the hash" 
                    />
                )}
                { 
                !showChat &&
                <div className="login-box">
                    <form>
                        <div className="user-box">
                            <input
                                type="text"
                                value={name}
                                placeholder="Username"
                                required
                                onChange={(e) => SetName(e.target.value)}
                            />
                        </div>
                        { 
                            isAdmin && 
                            <div className="user-box">
                                <input
                                    type="number"
                                    // value={roomLimit}
                                    placeholder="Max People in room"
                                    required
                                    onChange={handleRoomLimitChange}
                                />
                            </div>
                        }
                        <div className="user-box">
                            <input
                                type="text"
                                id="hash-input"
                                value={hash}
                                placeholder="Security Token (CONFIDENTIAL)"
                                onChange={(e) => SetHash(e.target.value)}
                                required
                            />
                            {
                                showCopy && 
                                <button onClick={copyHash} className="copy-button">
                                    Copy Hash<FaCopy /> {/* Copy icon */}
                                </button>
                            }
                        </div>
                        <center>
                            <button onClick={handleHash}>
                                Generate Hash
                            </button>
                            <button onClick={joinRoom}>
                                Chat
                            </button>
                        </center>
                    </form>
                </div>
            }
            {
                showChat &&
                <Chat
                    socket={socket}
                    name={name}
                    hash={hash}
                    isAdmin={isAdmin}
                />
            }
        </div>
    );
}

export default Login;